select i.*
, n.user_count
, n2.emails_sent
from
(
select
datediff('days', osr.sent_date, convert_timezone('America/New_York', ca.arrival_created_at)::Date) as ds_onboarding_sent
, osr.sent_date
, osr.onboarding_sent
, case when c.communication_vendor_template_name = 'JC_ALL_Onboarding_v2' then 'Onboarding'
       else 'Other' end as campaign_type
, count(distinct case when campaign_type = 'Onboarding' then ca.arrival_key else a.arrival_key end) as arrivals
, sum(coalesce(jcr.job_revenue, 0)) as revenue
from dbm.jc_onboarding_v2_send_record osr
inner join communications c
   on c.user_key = osr.user_key
   and convert_timezone('America/New_York', c.communication_sent_time)::Date >= '2020-06-04'
left join dbm.communication_to_arrival ca
     on ca.user_key = osr.user_key
     and ca.communication_channel = 'EMAIL'
     and ca.communication_id = c.communication_id
     and convert_timezone('America/New_York', ca.arrival_created_at)::Date >= '2020-06-04'
left join arrivals a
   on a.user_key = ca.user_key
   and a.arrival_key = ca.arrival_key
--    and convert_timezone('America/New_York', a.arrival_created_at)::Date >= osr.sent_date
 	and a.arrival_computed_traffic_type in ('Email')
  and a.arrival_application = 'jobcase.com'
  and a.arrival_computed_bot_classification is null
left join
  (
    SELECT user_key, arrival_key
                 , SUM(job_search_clickout_revenue) job_revenue
                 , count(distinct case when job_search_clickout_disposition = 'SUCCESS' AND job_search_clickout_status = 'POSTED' THEN job_search_clickout_key END) job_clicks
          FROM job_search_clickouts
            NATURAL JOIN arrivals
          WHERE arrival_computed_bot_classification IS NULL
          AND   arrival_application = 'jobcase.com'
          and job_search_clickout_disposition = 'SUCCESS'
                                        and job_search_clickout_status = 'POSTED'
          AND  arrival_created_at >= convert_timezone('America/New_York', 'UTC', '2020-06-04 00:00')
          GROUP BY 1,2
  ) jcr
  on jcr.user_key = ca.user_key and jcr.arrival_key = ca.arrival_key
group by 1,2,3,4
) i
left join
  (
    select
    osr.sent_date as sent_date
    , osr.onboarding_sent as onboarding_sent
    , count(distinct osr.user_key) as user_count
    from
    dbm.jc_onboarding_v2_send_record osr
    group by 1,2
  ) n
  on n.sent_date = i.sent_date and n.onboarding_sent = i.onboarding_sent
left join
  (
   select
   datediff('days', osr.sent_date, convert_timezone('America/New_York', c.communication_sent_time)::Date) as ds_onboarding_sent
   , osr.sent_date
   , osr.onboarding_sent
   , case when c.communication_vendor_template_name = 'JC_ALL_Onboarding_v2' then 'Onboarding'
       else 'Other' end as campaign_type
   , count(distinct case when c.communication_failure_time is null then c.communication_id end) as emails_sent
   from dbm.jc_onboarding_v2_send_record osr
   inner join communications c
     on osr.user_key = c.user_key
     and convert_timezone('America/New_York', c.communication_sent_time)::Date >= osr.sent_date
   group by 1,2,3,4
  ) n2
  on n2.sent_date = i.sent_date
  and n2.onboarding_sent = i.onboarding_sent
  and n2.ds_onboarding_sent = i.ds_onboarding_sent
  and n2.campaign_type = i.campaign_type
where arrivals >0
and i.ds_onboarding_sent >=0
order by 1,2,3,4
;
